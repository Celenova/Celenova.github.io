<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Celenova.github.io</id>
    <title>Celenova</title>
    <updated>2025-08-05T12:55:27.858Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Celenova.github.io"/>
    <link rel="self" href="https://Celenova.github.io/atom.xml"/>
    <subtitle>愿此行，终抵群星</subtitle>
    <logo>https://Celenova.github.io/images/avatar.png</logo>
    <icon>https://Celenova.github.io/favicon.ico</icon>
    <rights>All rights reserved 2025, Celenova</rights>
    <entry>
        <title type="html"><![CDATA[致我的初中]]></title>
        <id>https://Celenova.github.io/post/zhi-wo-de-chu-zhong/</id>
        <link href="https://Celenova.github.io/post/zhi-wo-de-chu-zhong/">
        </link>
        <updated>2025-08-04T14:28:00.000Z</updated>
        <summary type="html"><![CDATA[<p>hhh笑不活了<br>
在线收图</p>
]]></summary>
        <content type="html"><![CDATA[<p>hhh笑不活了<br>
在线收图</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[背包问题]]></title>
        <id>https://Celenova.github.io/post/bei-bao-wen-ti/</id>
        <link href="https://Celenova.github.io/post/bei-bao-wen-ti/">
        </link>
        <updated>2025-08-04T14:20:31.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="p01背包问题p"><p>01背包问题：</p></h2>
<p>无优化</p>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    for(int c=0;c&lt;=m;c++)
    {
        f[i][c]=f[i-1][c];
        if(c&gt;=w[i])
        f[i][c]=max(f[i][c],f[i-1][c-w[i]]+v[i]);
    }
}</code></pre>
<p>一维数组优化：</p>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    for(int c=m;c&gt;=0;c--)
    {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
    }
}</code></pre>
<p>更进一步的常数优化：</p>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    sumw+=w[i];
    bound=max(m-sumw,w[i]);
    for(int c=m;c&gt;=bound;c--)
    {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
    }
}</code></pre>
<h2 id="p完全背包问题p"><p>完全背包问题：</p></h2>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    for(int c=0;c&lt;=m;c++)
    {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
    }
}</code></pre>
<h2 id="p多重背包问题p"><p>多重背包问题：</p></h2>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    if(w[i]*a[i]&gt;m)
    {
        for(int c=0;c&lt;=m;c++)
        {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
        }
    }
    else
    {
         k=1;amount=a[i];
         while(k&lt;amount)
         {
             for(int c=k*w[i];c&gt;=0;c--)
             {
                 if(c&gt;=w[i])
                 f[c]=max(f[c],f[c-w[i]]+k*v[i]);
             }
             amount-=k;
             k&lt;&lt;=1;
         }  
         for(int c=amount*w[i];c&gt;=0;c--)
         {
             f[c]=max(f[c],f[c-w[i]]+amount*v[i]);
         }
    } 
}</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h2 id="p01背包问题p"><p>01背包问题：</p></h2>
<p>无优化</p>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    for(int c=0;c&lt;=m;c++)
    {
        f[i][c]=f[i-1][c];
        if(c&gt;=w[i])
        f[i][c]=max(f[i][c],f[i-1][c-w[i]]+v[i]);
    }
}</code></pre>
<p>一维数组优化：</p>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    for(int c=m;c&gt;=0;c--)
    {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
    }
}</code></pre>
<p>更进一步的常数优化：</p>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    sumw+=w[i];
    bound=max(m-sumw,w[i]);
    for(int c=m;c&gt;=bound;c--)
    {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
    }
}</code></pre>
<h2 id="p完全背包问题p"><p>完全背包问题：</p></h2>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    for(int c=0;c&lt;=m;c++)
    {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
    }
}</code></pre>
<h2 id="p多重背包问题p"><p>多重背包问题：</p></h2>
<pre class="highlighter-hljs"><code>for(int i=1;i&lt;=n;i++)
{
    if(w[i]*a[i]&gt;m)
    {
        for(int c=0;c&lt;=m;c++)
        {
        if(c&gt;=w[i])
        f[c]=max(f[c],f[c-w[i]]+v[i]);
        }
    }
    else
    {
         k=1;amount=a[i];
         while(k&lt;amount)
         {
             for(int c=k*w[i];c&gt;=0;c--)
             {
                 if(c&gt;=w[i])
                 f[c]=max(f[c],f[c-w[i]]+k*v[i]);
             }
             amount-=k;
             k&lt;&lt;=1;
         }  
         for(int c=amount*w[i];c&gt;=0;c--)
         {
             f[c]=max(f[c],f[c-w[i]]+amount*v[i]);
         }
    } 
}</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++|STL]]></title>
        <id>https://Celenova.github.io/post/corstl/</id>
        <link href="https://Celenova.github.io/post/corstl/">
        </link>
        <updated>2025-08-04T14:11:45.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[高中数学必修一笔记]]></title>
        <id>https://Celenova.github.io/post/gao-zhong-shu-xue-bi-xiu-yi-bi-ji/</id>
        <link href="https://Celenova.github.io/post/gao-zhong-shu-xue-bi-xiu-yi-bi-ji/">
        </link>
        <updated>2025-08-04T14:08:32.000Z</updated>
        <summary type="html"><![CDATA[<p>已吐</p>
]]></summary>
        <content type="html"><![CDATA[<p>已吐</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[警世名言]]></title>
        <id>https://Celenova.github.io/post/jing-shi-ming-yan/</id>
        <link href="https://Celenova.github.io/post/jing-shi-ming-yan/">
        </link>
        <updated>2025-08-04T14:05:34.000Z</updated>
    </entry>
</feed>